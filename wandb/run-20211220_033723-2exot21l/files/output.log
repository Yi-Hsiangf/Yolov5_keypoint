Overriding model.yaml nc=80 with nc=1
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     21576  models.yolo.Detect                      [1, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model Summary: 270 layers, 7027720 parameters, 7027720 gradients, 15.9 GFLOPs
Transferred 343/349 items from yolov5s.pt
Scaled weight_decay = 0.0005
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '/home/data/data/2020_Autumn_key/labels/train.cache' images and labels... 1078 found, 0 missing, 239 empty, 2 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1078/1078 [00:00<?, ?it/s]
[34m[1mtrain: [39m[22mWARNING: /home/data/data/2020_Autumn_key/images/train/VID_20201101_102143.mp4#t=144.2.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1329      1.1329]
[34m[1mtrain: [39m[22mWARNING: /home/data/data/2020_Autumn_key/images/train/VID_20201101_102625.mp4#t=139.5.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0273      1.0273]
[34m[1mval: [39m[22mScanning '/home/data/data/2020_Autumn_key/labels/val.cache' images and labels... 236 found, 0 missing, 66 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 236/236 [00:00<?, ?it/s]
Plotting labels to runs/train/exp15/labels.jpg...
[34m[1mAutoAnchor: [39m[22m5.72 anchors/target, 0.986 Best Possible Recall (BPR). Current anchors are a good fit to dataset âœ…
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns/train/exp15
Starting training for 20 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
  0%|          | 0/34 [00:00<?, ?it/s]
Shape of passed values is (3051, 6), indices imply (3051, 4)
p_key_xy:  tensor([[1.15723, 1.08496],
        [1.07812, 1.15625],
        [1.04590, 1.07910],
        ...,
        [1.04004, 1.12793],
        [1.21484, 1.07227],
        [1.04883, 1.12891]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.09277, 0.91943],
        [1.03516, 0.86670],
        [1.07812, 0.98926],
        ...,
        [1.09473, 1.07422],
        [1.05469, 0.94580],
        [1.10352, 1.04980]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.05566, 1.07129],
        [1.06836, 1.04785],
        [1.02344, 1.05078],
        ...,
        [1.10742, 1.06152],
        [1.10645, 1.04492],
        [1.05762, 1.06641]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
before:  tensor([2.36159], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.03723], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.], device='cuda:0') tensor([0.87144], device='cuda:0', grad_fn=<AddBackward0>)

      0/19     8.46G    0.1181   0.03723   0.02179       439      1280:   3%|â–Ž         | 1/34 [00:10<05:52, 10.68s/it]
p_key_xy:  tensor([[1.01172, 1.16797],
        [1.05469, 1.09277],
        [1.05762, 1.04004],
        ...,
        [1.16797, 1.12012],
        [1.18359, 1.08789],
        [0.97607, 1.13379]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.11914, 0.90771],
        [1.09473, 1.00586],
        [1.02539, 0.96826],
        ...,
        [1.11328, 1.03613],
        [1.10547, 1.04980],
        [1.13281, 1.09375]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.06934, 1.16211],
        [1.08691, 1.11719],
        [1.08105, 1.06836],
        ...,
        [1.12695, 0.98633],
        [1.09668, 1.01562],
        [1.08203, 1.01367]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
before:  tensor([2.33349], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.03370], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.], device='cuda:0') tensor([0.88786], device='cuda:0', grad_fn=<AddBackward0>)
lkey loss:  tensor([0.02220], device='cuda:0', grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.00879, 1.05957],
        [1.08887, 1.24512],
        [1.18164, 0.98682],
        ...,
        [1.07910, 1.12109],
        [1.07031, 1.12793],
        [1.05957, 1.14746]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[0.99854, 1.05371],
        [1.16602, 1.01074],
        [1.00293, 1.05273],
        ...,
        [1.01758, 0.98633],
        [1.11426, 0.98926],
        [1.04395, 1.02637]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
p_key_xy:  tensor([[1.07715, 1.05957],
        [1.12695, 1.11816],
        [1.07812, 1.08496],
        ...,
        [1.05957, 1.04590],
        [1.09668, 1.07715],
        [1.06348, 1.09961]], device='cuda:0', dtype=torch.float16, grad_fn=<MulBackward0>)
before:  tensor([2.36693], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.03451], device='cuda:0', grad_fn=<AddBackward0>) tensor([0.], device='cuda:0') tensor([0.86809], device='cuda:0', grad_fn=<AddBackward0>)
      0/19     6.04G    0.1177   0.03515   0.02189       365      1280:   6%|â–Œ         | 2/34 [00:11<03:10,  5.96s/it]
Traceback (most recent call last):
  File "/home/rumex/keypoint_yolo/train.py", line 626, in <module>
    main(opt)
  File "/home/rumex/keypoint_yolo/train.py", line 523, in main
    train(opt.hyp, opt, device, callbacks)
  File "/home/rumex/keypoint_yolo/train.py", line 342, in train
    pbar.set_description(('%10s' * 2 + '%10.4g' * 5) % (
  File "/home/rumex/anaconda3/lib/python3.9/site-packages/tqdm/std.py", line 1393, in set_description
    self.refresh()
  File "/home/rumex/anaconda3/lib/python3.9/site-packages/tqdm/std.py", line 1345, in refresh
    self._lock.acquire()
  File "/home/rumex/anaconda3/lib/python3.9/site-packages/tqdm/std.py", line 106, in acquire
    lock.acquire(*a, **k)
KeyboardInterrupt